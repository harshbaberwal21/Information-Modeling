BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "DRIVES" (
	"DRIVER_LICENSE_ID"	TEXT NOT NULL,
	"VEHICLE_ID"	TEXT NOT NULL,
	"DATE"	TEXT,
	FOREIGN KEY("VEHICLE_ID") REFERENCES "VEHICLE"("VEHICLE_ID"),
	FOREIGN KEY("DRIVER_LICENSE_ID") REFERENCES "DRIVER"("DRIVER_LICENSE_ID"),
	PRIMARY KEY("DRIVER_LICENSE_ID","VEHICLE_ID")
);
CREATE TABLE IF NOT EXISTS "EMPLOYEE" (
	"DRIVER_LICENCE_ID"	TEXT,
	"EMPOLYEE_ID"	INTEGER NOT NULL,
	"NAME"	TEXT,
	"DEPARTMENT_ID"	INTEGER,
	FOREIGN KEY("DRIVER_LICENCE_ID") REFERENCES "DRIVER"("DRIVER_LICENSE_ID"),
	FOREIGN KEY("DEPARTMENT_ID") REFERENCES "DEPARTMENT"("DEPARTMENT_ID"),
	PRIMARY KEY("EMPOLYEE_ID")
);
CREATE TABLE IF NOT EXISTS "MVR_FORM" (
	"MVR_ID"	INTEGER NOT NULL,
	"DEFICIENCY_POINTS"	INTEGER,
	"RISK_DEPARTMENT_APPROVAL"	INTEGER NOT NULL,
	"DRIVER_LICENCE_ID"	TEXT NOT NULL,
	FOREIGN KEY("DRIVER_LICENCE_ID") REFERENCES "DRIVER"("DRIVER_LICENSE_ID"),
	PRIMARY KEY("MVR_ID")
);
CREATE TABLE IF NOT EXISTS "VEHICLE" (
	"VEHICLE_ID"	TEXT NOT NULL,
	"VEHICLE_TYPE"	TEXT,
	"PASSENGER_LIMITATION"	INTEGER,
	"OWNERSHIP"	TEXT,
	PRIMARY KEY("VEHICLE_ID")
);
CREATE TABLE IF NOT EXISTS "VAR_FORM" (
	"VAR_ID"	INTEGER NOT NULL,
	"DRIVER_LICENSE_ID"	TEXT NOT NULL,
	"LOCATION"	TEXT,
	"DRIVER_AT_FAULT"	INTEGER,
	"DATE"	TEXT,
	FOREIGN KEY("DRIVER_LICENSE_ID") REFERENCES "DRIVER"("DRIVER_LICENSE_ID"),
	PRIMARY KEY("VAR_ID")
);
CREATE TABLE IF NOT EXISTS "INSURANCE_CLAIMS" (
	"VAR_ID"	INTEGER,
	"DRIVER_LICENSE_ID"	TEXT,
	"VEHICLE_ID"	TEXT,
	"CLAIM_ID"	INTEGER NOT NULL,
	"WCI_FLAG"	INTEGER,
	"FI_FLAG"	INTEGER,
	"CLAIM_AMOUNT"	NUMERIC,
	"WCI_PASSENGER_COUNT"	INTEGER,
	"FI_VEHICLE_DAMAGE_COUNT"	INTEGER,
	FOREIGN KEY("VAR_ID") REFERENCES "VAR_FORM"("VAR_ID"),
	FOREIGN KEY("VEHICLE_ID") REFERENCES "VEHICLE"("VEHICLE_ID"),
	FOREIGN KEY("DRIVER_LICENSE_ID") REFERENCES "DRIVER"("DRIVER_LICENSE_ID"),
	PRIMARY KEY("CLAIM_ID")
);
CREATE TABLE IF NOT EXISTS "PASSENGERS" (
	"NAME"	TEXT NOT NULL,
	"VEHICLE_ID"	INTEGER,
	FOREIGN KEY("VEHICLE_ID") REFERENCES "VEHICLE"("VEHICLE_ID"),
	PRIMARY KEY("NAME")
);
CREATE TABLE IF NOT EXISTS "DRIVER" (
	"DRIVER_LICENSE_ID"	TEXT NOT NULL,
	"NAME"	TEXT,
	"YEAR_OF_EXPERIENCE"	INTEGER,
	"HEALTH_PROBLEMS"	INTEGER,
	"NUMBER_OF_ACCIDENTS"	INTEGER,
	"APPROVER_EMP_ID"	INTEGER,
	FOREIGN KEY("APPROVER_EMP_ID") REFERENCES "EMPLOYEE"("EMPOLYEE_ID"),
	PRIMARY KEY("DRIVER_LICENSE_ID")
);
CREATE TABLE IF NOT EXISTS "DEPARTMENT" (
	"DEPARTMENT_ID"	INTEGER NOT NULL,
	"DEPARTMENT_NAME"	TEXT,
	"DEPARTMENT_FUNDS"	NUMERIC,
	"DEPARTMENT_HEAD_EMP_ID"	INTEGER,
	FOREIGN KEY("DEPARTMENT_HEAD_EMP_ID") REFERENCES "EMPLOYEE"("EMPOLYEE_ID"),
	PRIMARY KEY("DEPARTMENT_ID")
);
CREATE TABLE IF NOT EXISTS "NON_EMPLOYEE" (
	"DRIVER_LICENSE_ID"	TEXT NOT NULL,
	"NAME"	TEXT,
	FOREIGN KEY("DRIVER_LICENSE_ID") REFERENCES "DRIVER"("DRIVER_LICENSE_ID"),
	PRIMARY KEY("DRIVER_LICENSE_ID")
);
CREATE TABLE IF NOT EXISTS "ACCOMMODATES" (
	"NAME"	TEXT NOT NULL,
	"VEHICLE_ID"	TEXT,
	"DATE"	TEXT,
	FOREIGN KEY("NAME") REFERENCES "PASSENGERS"("NAME"),
	FOREIGN KEY("VEHICLE_ID") REFERENCES "VEHICLE"("VEHICLE_ID"),
	PRIMARY KEY("NAME","VEHICLE_ID")
);
INSERT INTO "DRIVES" VALUES ('1001','2001','08/01/2021');
INSERT INTO "DRIVES" VALUES ('1002','2002','08/05/2021');
INSERT INTO "DRIVES" VALUES ('1003','2003','08/10/2021');
INSERT INTO "DRIVES" VALUES ('1004','2004','08/20/2021');
INSERT INTO "DRIVES" VALUES ('1005','2005','08/25/2021');
INSERT INTO "EMPLOYEE" VALUES ('1001',1,'John',1);
INSERT INTO "EMPLOYEE" VALUES ('1002',2,'James',2);
INSERT INTO "EMPLOYEE" VALUES ('1003',3,'Smith',1);
INSERT INTO "MVR_FORM" VALUES (1,1,1,'1001');
INSERT INTO "MVR_FORM" VALUES (2,3,0,'1002');
INSERT INTO "MVR_FORM" VALUES (3,4,1,'1003');
INSERT INTO "MVR_FORM" VALUES (4,2,1,'1004');
INSERT INTO "MVR_FORM" VALUES (5,0,1,'1005');
INSERT INTO "VEHICLE" VALUES ('2001','sedans',4,'University-owned');
INSERT INTO "VEHICLE" VALUES ('2002','SUVs',5,'personal');
INSERT INTO "VEHICLE" VALUES ('2003','mini-vans',2,'rental');
INSERT INTO "VEHICLE" VALUES ('2004','SUVs',5,'personal');
INSERT INTO "VEHICLE" VALUES ('2005','station wagons',6,'University-owned');
INSERT INTO "VAR_FORM" VALUES (1,'1002','Off Campus',1,'10/02/2021');
INSERT INTO "VAR_FORM" VALUES (2,'1003','On Campus',0,'09/25/2021');
INSERT INTO "INSURANCE_CLAIMS" VALUES (1,'1002','2002',1,1,0,500,3,1);
INSERT INTO "INSURANCE_CLAIMS" VALUES (2,'1003','2003',2,1,0,1500,2,2);
INSERT INTO "PASSENGERS" VALUES ('Brown',2001);
INSERT INTO "PASSENGERS" VALUES ('Sarah',2002);
INSERT INTO "PASSENGERS" VALUES ('Emma',2003);
INSERT INTO "PASSENGERS" VALUES ('Sophia',2004);
INSERT INTO "PASSENGERS" VALUES ('Alan',2005);
INSERT INTO "DRIVER" VALUES ('1001','John',5,'None',0,1);
INSERT INTO "DRIVER" VALUES ('1002','James',6,'None',0,3);
INSERT INTO "DRIVER" VALUES ('1003','Smith',7,'None',2,3);
INSERT INTO "DRIVER" VALUES ('1004','Johnson',6,'None',1,2);
INSERT INTO "DRIVER" VALUES ('1005','Jones',7,'None',1,2);
INSERT INTO "DEPARTMENT" VALUES (1,'Security Office',3000,1);
INSERT INTO "DEPARTMENT" VALUES (2,'Accounting',5000,2);
INSERT INTO "DEPARTMENT" VALUES (3,'Student Union',2000,3);
INSERT INTO "NON_EMPLOYEE" VALUES ('1005','Jones');
INSERT INTO "NON_EMPLOYEE" VALUES ('1004','Johnson');
INSERT INTO "ACCOMMODATES" VALUES ('Alan','2001','08/07/2021');
INSERT INTO "ACCOMMODATES" VALUES ('Brown','2002','08/21/2021');
INSERT INTO "ACCOMMODATES" VALUES ('Emma','2003','09/01/2021');
INSERT INTO "ACCOMMODATES" VALUES ('Sarah','2004','08/30/2021');
INSERT INTO "ACCOMMODATES" VALUES ('Sophia','2005','09/05/2021');
COMMIT;


/* Get the average claim amount for all drivers driving an SUV */
SELECT avg(INSURANCE_CLAIMS.CLAIM_AMOUNT) as AVERAGE_CLAIM_AMOUNT_FOR_SUV
FROM DRIVER INNER JOIN INSURANCE_CLAIMS 
ON DRIVER.DRIVER_LICENSE_ID = INSURANCE_CLAIMS.DRIVER_LICENSE_ID 
AND INSURANCE_CLAIMS.VEHICLE_ID = (SELECT VEHICLE_ID FROM VEHICLE WHERE VEHICLE_TYPE = 'SUVs');

/*Get all employees working at the security office having more than 5 years of driving experience*/
SELECT EMPLOYEE.EMPOLYEE_ID, EMPLOYEE.NAME 
FROM EMPLOYEE INNER JOIN DEPARTMENT 
ON EMPLOYEE.DEPARTMENT_ID = DEPARTMENT.DEPARTMENT_ID 
WHERE DEPARTMENT.DEPARTMENT_NAME = 'Security Office'
AND EMPLOYEE.EMPOLYEE_ID = (SELECT DRIVER.APPROVER_EMP_ID FROM DRIVER WHERE DRIVER.YEAR_OF_EXPERIENCE > 5);

/*Get the total number of on campus accidents while on university business*/
SELECT count(VAR_FORM.VAR_ID) as TOTAL_ACCIDENTS_ON_CAMPUS
FROM DRIVER INNER JOIN VAR_FORM 
ON DRIVER.DRIVER_LICENSE_ID = VAR_FORM.DRIVER_LICENSE_ID
WHERE VAR_FORM.LOCATION = 'On Campus';

